#########################################################
#	Good explanation of Passive/Active FTP modes: 		#
#   													#
# http://slacksite.com/other/ftp.html					#
#														#
# Active FTP :											#
#    command : client >1023 -> server 21 IN				#
#    data    : client >1023 <- server 20 OUT			#
#														#
# Passive FTP :											#
#    command : client >1023 <-> server 21   IN/OUT		#
#    data    : client >1024 -> server >1023  IN			#
#														#
#														#
#														#
# 1. Active FTP:	
#													  														#
# Client send PORT command to server at TCP 21 port. 							  							#
# It sends the PORT command, specifying what client-side port the server should connect to. 		  		#
# The server connects from port 20 to the client port designated for the data channel (in PORT command).  	#
#													  														#
# 2. Passive FTP:											 												#
#													  														#
# Client send PASV command to server at TCP 21 port.							  							#
# The server replies, indicating which (random) port it has opened for data transfer. 			  			#
# The client connects from another random port to the random port specified in the server's response. 	  	#
#############################################################################################################




# MY ADVICE IS: JUST NOT USE THIS FUCKIN TECHNOLOGY ... FTP STANDS FOR FUCK THIS PROTOCOL.
# MUCH BETTER IS TO USE NEXTCLOUD OR SOMETHING ... MODERN.




========== VSFTP ==============

1. Below configuration was last used on 08/2020, Debian 10, version vsftpd 3.0.3-12, amd64
-- -- --

# /etc/vsftpd.conf

# If enabled, vsftpd will run in standalone mode. This means that vsftpd must not be run from an inetd of some kind. Instead, the vsftpd executable is run once directly. vsftpd itself will
# then take care of listening for and handling incoming connections.
listen=YES

# Controls whether local logins are permitted or not. If enabled, normal user accounts in /etc/passwd (or wherever your PAM config references) may be used to log in. This  must  be  enable
# for any non-anonymous login to work, including virtual users.
local_enable=YES

# This controls whether any FTP commands which change the filesystem are allowed or not. These commands are: STOR, DELE, RNFR, RNTO, MKD, RMD, APPE and SITE.
write_enable=YES

# This controls whether PORT style data connections use port 20 (ftp-data) on the server machine. For security reasons, some clients may insist that this is the case. Conversely, disabling
# this option enables vsftpd to run with slightly less privilege.
connect_from_port_20=YES

# If  enabled,  vsftpd will display directory listings with the time in your local time zone. The default is to display GMT. The times returned by the MDTM FTP command are also affected by
# this option.
use_localtime=YES

# It's obvious...
anonymous_enable=NO
local_umask=022
rsa_cert_file=/etc/vsftpd/vsftpd.pem
rsa_private_key_file=/etc/vsftpd/vsftpd.pem
ssl_ciphers=HIGH

# If  enabled,  a  log file will be maintained detailling uploads and downloads.  By default, this file will be placed at /var/log/vsftpd.log, but this location may be overridden using the
# configuration setting vsftpd_log_file.
xferlog_enable=YES	

# If  enabled,  vsftpd  will  load  a list of usernames, from the filename given by userlist_file.  If a user tries to log in using a name in this file, they will be denied before they are
# asked for a password. This may be useful in preventing cleartext passwords being transmitted. See also userlist_deny.
userlist_enable=YES

# This option is the name of the file loaded when the userlist_enable option is active. Put every user on a new line.
userlist_file=/etc/vsftpd/user_list

# This option is examined if userlist_enable is activated. If you set this setting to NO, then users will be denied login unless they  are  explicitly  listed  in  the  file  specified  by
# userlist_file.  When login is denied, the denial is issued before the user is asked for a password.
userlist_deny=NO

# If vsftpd is in standalone mode, this is the maximum number of clients which may be connected. Any additional clients connecting will get an error message. Default: 0 (unlimited)
max_clients=5

# If vsftpd is in standalone mode, this is the maximum number of clients which may be connected from the same source internet address. A client will get an error message if  they  go  over
# this limit. Default: 0 (unlimited)
max_per_ip=5

# If you not enable chroot, well, your user is able to navigate through whole server / directory and files :/
chroot_local_user=YES

# This sub_token is kind of enabling a variable. It's used below for local_root.
user_sub_token=$USER

# Note that you are expected to manually create this ftp directory and set it like that:
# mkdir /home/sammy/ftp
# chown nobody:nogroup /home/sammy/ftp
# chmod a-w /home/sammy/ftp
# 
# s -la /home/sammy/ftp
# Output
# total 8
# 4 dr-xr-xr-x  2 nobody nogroup 4096 Aug 24 21:29 .
# 4 drwxr-xr-x  3 sammy  sammy   4096 Aug 24 21:29 ..
# 
# 
# mkdir /home/sammy/ftp/files
# chown sammy:sammy /home/sammy/ftp/files
# 
# Now, test it via FileZilla client, as it support TLS ;)
local_root=/home/$USER/ftp

# If  enabled,  and vsftpd was compiled against OpenSSL, vsftpd will support secure connections via SSL. This applies to the control connection (including login) and also data connections.
# You'll need a client with SSL support too. NOTE!!  Beware enabling this option. Only enable it if you need it. vsftpd can make no guarantees about the security of the OpenSSL  libraries.
# By enabling this option, you are declaring that you trust the security of your installed OpenSSL library.
ssl_enable=YES

# If  set  to yes, all SSL data connections are required to exhibit SSL session reuse (which proves that they know the same master secret as the control channel). Although this is a secure
# default, it may break many FTP clients, so you may want to disable it. For a discussion of the consequences, see http://scarybeastsecurity.blogspot.com/2009/02/vsftpd-210-released.html
# (Added in v2.1.0).
require_ssl_reuse=NO

# NOTE! You must open these ports in your iptables [ and on your wan router if that apply to you].
pasv_min_port=40000
pasv_max_port=50000


2. SSL key generation via openssl lib:

openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/vsftpd/vsftpd.pem -out /etc/vsftpd/vsftpd.pem

