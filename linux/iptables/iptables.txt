# CHAIN EXPLANATION: http://www.linuxhomenetworking.com/wiki/index.php/Quick_HOWTO_:_Ch14_:_Linux_Firewalls_Using_iptables#.UkvwQYanpNA
# CHAIN EXPLANATION: http://www.netfilter.org/documentation/HOWTO//packet-filtering-HOWTO-6.html
# IPTABLES DIAGRAM:  http://www.adminsehow.com/2011/09/iptables-packet-traverse-map/

# Put all ACCEPT rules and do not forget to accept your remote port (i.e 22) if you work remotely.

iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A INPUT -p tcp --dport 22 -j ACCEPT

# Finally put DROP policy to all chains.

iptables -P INPUT DROP
iptables -P FORWARD DROP

# Save your work. Below example is for Red Hat. Below command save them in /etc/sysconfig/iptables
iptables-restore < /etc/sysconfig/iptables

### For Debian this works like this. 1st install apt-get install iptables-persistent. Then you can use this:

iptables-save > /etc/iptables/rules
iptables-restore < /etc/iptables/rules

#######
# NAT #
#######

iptables -t nat -A PREROUTING === this is used mainly for changing DESTINATION ADDRESS (a.k.a DNAT)
iptables -t nat -A POSTROUTING === this is used mainly for changing SOURCE ADDRESS (a.k.a SNAT)

packet --> [DNAT] (PRE) ROUTING (POST) [SNAT] --> packet ...

# examples:
# SNAT
iptables -t nat -A POSTROUTING -o <iface-traffic-that-should-be-natted> -j SNAT --to-source <SRV-or-RTR-IP>

# DNAT
iptables -t nat -A PREROUTING -i ppp0 -p tcp --dport 80 -j DNAT --to-destination 192.168.1.24:80


# OpenVPN example:
# Say you have 1 openvpn server, which has tun0 iface with 192.168.33.0/24 and vpn clients get ips from this net.
# Okay, your vpn server has physical nic ens224 with 192.168.44.0/24 that you want to access, as this is the network of other srvs too.
# Check iptables settings, ip forwarding and add this rule on the server:
iptables -t nat -A POSTROUTING -s 192.168.33.0/24 -o ens224 -j MASQUERADE
