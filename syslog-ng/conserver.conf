@version: 3.1
#
# Syslog-ng configuration file, compatible with default Debian syslogd
# installation. Originally written by anonymous (I can't find his name)
# Revised, and rewrited by me (SZALAY Attila <sasa@debian.org>)

# First, set some global options.
options { long_hostnames(off); flush_lines(0); use_dns(persist_only); dns_cache_hosts(/etc/hosts); use_fqdn(no);
	  owner("root"); group("adm"); perm(0640); stats_freq(0);
	  bad_hostname("^gconfd$"); create_dirs(yes);
};

########################
# Sources
########################
# This is the default behavior of sysklogd package
# Logs may come from unix stream, but not from another machine.
#
source s_src { unix-dgram("/dev/log"); internal();
       	     file("/proc/kmsg" program_override("kernel"));
};

# If you wish to get logs from remote machine you should uncomment
# this and comment the above source line.
# myComment: if you uncomment the upper line you must delete the s_src in the log statements

########################
# Destinations
########################
# First some standard logfile
#
destination d_auth { file("/var/log/auth.log"); };
destination d_cron { file("/var/log/cron.log"); };
destination d_daemon { file("/var/log/daemon.log"); };
destination d_kern { file("/var/log/kern.log"); };
destination d_lpr { file("/var/log/lpr.log"); };
destination d_mail { file("/var/log/mail.log"); };
destination d_syslog { file("/var/log/syslog"); };
destination d_user { file("/var/log/user.log"); };
destination d_uucp { file("/var/log/uucp.log"); };

# This files are the log come from the mail subsystem.
#
destination d_mailinfo { file("/var/log/mail/mail.info"); };
destination d_mailwarn { file("/var/log/mail/mail.warn"); };
destination d_mailerr { file("/var/log/mail/mail.err"); };

# Logging for INN news system
#
destination d_newscrit { file("/var/log/news/news.crit"); };
destination d_newserr { file("/var/log/news/news.err"); };
destination d_newsnotice { file("/var/log/news/news.notice"); };

# Some `catch-all' logfiles.
#
destination d_debug { file("/var/log/debug"); };
destination d_error { file("/var/log/error"); };
destination d_messages { file("/var/log/messages"); };

# The root's console.
#
destination d_console { usertty("root"); };

# Virtual console.
#
destination d_console_all { file("/dev/tty10"); };

# The named pipe /dev/xconsole is for the nsole' utility.  To use it,
# you must invoke nsole' with the -file' option:
#
#    $ xconsole -file /dev/xconsole [...]
#
destination d_xconsole { pipe("/dev/xconsole"); };

# Send the messages to an other host
#
#destination d_net { tcp("127.0.0.1" port(1000) authentication(on) encrypt(on) log_fifo_size(1000)); };

# Debian only
destination d_ppp { file("/var/log/ppp.log"); };

########################
# Filters
########################
# Here's come the filter options. With this rules, we can set which 
# message go where.

filter f_dbg { level(debug); };
filter f_info { level(info); };
filter f_notice { level(notice); };
filter f_warn { level(warn); };
filter f_err { level(err); };
filter f_crit { level(crit .. emerg); };

filter f_debug { level(debug) and not facility(auth, authpriv, news, mail); };
filter f_error { level(err .. emerg) ; };
filter f_messages { level(info,notice,warn) and 
                    not facility(auth,authpriv,cron,daemon,mail,news); };

filter f_auth { facility(auth, authpriv) and not filter(f_debug); };
filter f_cron { facility(cron) and not filter(f_debug); };
filter f_daemon { facility(daemon) and not filter(f_debug); };
filter f_syslog { facility(syslog);};

filter f_kern { facility(kern) and not filter(f_debug); };
filter f_lpr { facility(lpr) and not filter(f_debug); };
filter f_local { facility(local0, local1, local3, local4, local5,
                        local6, local7) and not filter(f_debug); };
filter f_mail { facility(mail) and not filter(f_debug); };
filter f_news { facility(news) and not filter(f_debug); };
filter f_syslog3 { not facility(auth, authpriv, mail) and not filter(f_debug); };
filter f_user { facility(user) and not filter(f_debug); };
filter f_uucp { facility(uucp) and not filter(f_debug); };

filter f_cnews { level(notice, err, crit) and facility(news); };
filter f_cother { level(debug, info, notice, warn) or facility(daemon, mail); };

filter f_ppp { facility(local2) and not filter(f_debug); };
filter f_console { level(warn .. emerg); };

########################
# Log paths
########################
log { source(s_src); filter(f_auth); destination(d_auth); };
log { source(s_src); filter(f_cron); destination(d_cron); };
log { source(s_src); filter(f_daemon); destination(d_daemon); };
log { source(s_src); filter(f_kern); destination(d_kern); };
log { source(s_src); filter(f_lpr); destination(d_lpr); };
log { source(s_src); filter(f_syslog3); destination(d_syslog); };
log { source(s_src); filter(f_user); destination(d_user); };
log { source(s_src); filter(f_uucp); destination(d_uucp); };

log { source(s_src); filter(f_mail); destination(d_mail); };
#log { source(s_src); filter(f_mail); filter(f_info); destination(d_mailinfo); };
#log { source(s_src); filter(f_mail); filter(f_warn); destination(d_mailwarn); };
#log { source(s_src); filter(f_mail); filter(f_err); destination(d_mailerr); };

log { source(s_src); filter(f_news); filter(f_crit); destination(d_newscrit); };
log { source(s_src); filter(f_news); filter(f_err); destination(d_newserr); };
log { source(s_src); filter(f_news); filter(f_notice); destination(d_newsnotice); };
#log { source(s_src); filter(f_cnews); destination(d_console_all); };
#log { source(s_src); filter(f_cother); destination(d_console_all); };

#log { source(s_src); filter(f_ppp); destination(d_ppp); };

log { source(s_src); filter(f_debug); destination(d_debug); };
log { source(s_src); filter(f_error); destination(d_error); };
log { source(s_src); filter(f_messages); destination(d_messages); };

log { source(s_src); filter(f_console); destination(d_console_all);
				    destination(d_xconsole); };
log { source(s_src); filter(f_crit); destination(d_console); };

# All messages send to a remote site
#
#log { source(s_src); destination(d_net); };

#source s_testfact01 { syslog(ip(0.0.0.0) port(4004) transport("tcp")); };
#destination d_testfact01 { file("/var/log/$HOST/$WEEK_DAY_NAME.log" template("$MSG\n") template_escape(no) );};
#log { source("s_testfact01"); destination("d_testfact01");};

# ==============================================================================================================
# Remote logging setup #

# LEGEND of used ports:
# 11696-11700 - messages, auth.log, syslog, daemon.log, error
# 11701-11706 - nginx log files
# 11707-11708 - apache2 log files
# 11709-11714 - tomcat log files
# 11715-11717 - asterisk log files
# 11718-11719 - apache2 wartesting log files

# SOURCES ##### SOURCES ####### SOURCES ####### SOURCES ####### SOURCES #######
# 1. std logging facilities
# daemon.log
source s_std_daemon { syslog(ip(0.0.0.0) port(11696) transport("tcp")); };
# syslog
source s_std_syslog { syslog(ip(0.0.0.0) port(11697) transport("tcp")); };
# auth.log
source s_std_auth { syslog(ip(0.0.0.0) port(11698) transport("tcp")); };
# messages
source s_std_messages { syslog(ip(0.0.0.0) port(11699) transport("tcp")); };
# error
source s_std_error { syslog(ip(0.0.0.0) port(11700) transport("tcp")); };

# 2. nginx
source s_nginx_access.log { syslog(ip(0.0.0.0) port(11701) transport("tcp")); };
source s_nginx_error.log { syslog(ip(0.0.0.0) port(11702) transport("tcp")); };
source s_nginx_pay_mydomain_com_http_access.log { syslog(ip(0.0.0.0) port(11703) transport("tcp")); };
source s_nginx_pay_mydomain_com_https_access.log { syslog(ip(0.0.0.0) port(11704) transport("tcp")); };
source s_nginx_stage_pay_mydomain_com_http_access.log { syslog(ip(0.0.0.0) port(11705) transport("tcp")); };
source s_nginx_stage_pay_mydomain_com_https_access.log { syslog(ip(0.0.0.0) port(11706) transport("tcp")); };

# 3. Apache2
source s_apache2_access.log { syslog(ip(0.0.0.0) port(11707) transport("tcp")); };
source s_apache2_error.log { syslog(ip(0.0.0.0) port(11708) transport("tcp")); };

# 4. Tomcat 
source s_tomcat_catalina.out { syslog(ip(0.0.0.0) port(11709) transport("tcp")); };
source s_tomcat_fact.log { syslog(ip(0.0.0.0) port(11710) transport("tcp")); };
source s_tomcat_cms.log { syslog(ip(0.0.0.0) port(11711) transport("tcp")); };
source s_tomcat_registry.log { syslog(ip(0.0.0.0) port(11712) transport("tcp")); };
source s_tomcat_erp.log { syslog(ip(0.0.0.0) port(11713) transport("tcp")); };
source s_tomcat_import.log { syslog(ip(0.0.0.0) port(11714) transport("tcp")); };

# 5. Asterisk
source s_asterisk_debug { syslog(ip(0.0.0.0) port(11715) transport("tcp")); };
source s_asterisk_messages { syslog(ip(0.0.0.0) port(11716) transport("tcp")); };
source s_asterisk_dtmf { syslog(ip(0.0.0.0) port(11717) transport("tcp")); };

# 6. Apache2 wartesting log files
source s_apache2_wartesting_access.log { syslog(ip(0.0.0.0) port(11718) transport("tcp")); };
source s_apache2_wartesting_error.log { syslog(ip(0.0.0.0) port(11719) transport("tcp")); };

# DESTINATIONS ##### DESTINATIONS ###### DESTwartestingINATIONS ###### DESTINATIONS ######
# 1. messages, auth, syslog, daemon.log, error
destination d_std_messages { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-messages"); };
destination d_std_auth { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-auth.log"); };
destination d_std_syslog { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-syslog"); };
destination d_std_error { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-error"); };
destination d_std_daemon { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-daemon.log"); };

# 2. nginx 
destination d_nginx_access.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-nginx_access.log" template("$DATE $MSG\n") template_escape(no));};
destination d_nginx_error.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-nginx_error.log" template("$DATE $MSG\n") template_escape(no));};
destination d_nginx_pay_mydomain_com_http_access.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-pay_mydomain_com_http_access.log" template("$DATE $MSG\n") template_escape(no));};
destination d_nginx_pay_mydomain_com_https_access.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-pay_mydomain_com_https_access.log" template("$DATE $MSG\n") template_escape(no));};
destination d_nginx_stage_pay_mydomain_com_http_access.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-stage_pay_mydomain_com_http_access.log" template("$DATE $MSG\n") template_escape(no));};
destination d_nginx_stage_pay_mydomain_com_https_access.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-stage_pay_mydomain_com_https_access.log" template("$DATE $MSG\n") template_escape(no));};

# 3. Apache2
destination d_apache2_access.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-apache2_access.log" template("$DATE $MSG\n") template_escape(no));};
destination d_apache2_error.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-apache2_error.log" template("$DATE $MSG\n") template_escape(no));};

# 4. Tomcat
destination d_tomcat_catalina.out { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-tomcat_catalina.out" template("$DATE $MSG\n") template_escape(no));};
destination d_tomcat_fact.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-tomcat_fact.log" template("$DATE $MSG\n") template_escape(no));};
destination d_tomcat_cms.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-tomcat_cms.log" template("$DATE $MSG\n") template_escape(no));};
destination d_tomcat_registry.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-registry.log" template("$DATE $MSG\n") template_escape(no));};
destination d_tomcat_erp.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-tomcat_erp.log" template("$DATE $MSG\n") template_escape(no));};
destination d_tomcat_import.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-import.log" template("$DATE $MSG\n") template_escape(no));};

# 5. Asterisk
destination d_asterisk_debug { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-asterisk_debug" template("$DATE $MSG\n") template_escape(no));};
destination d_asterisk_messages { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-asterisk_messages" template("$DATE $MSG\n") template_escape(no));};
destination d_asterisk_dtmf { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-asterisk_dtmf" template("$DATE $MSG\n") template_escape(no));};

# 6. Apache2 wartesting 
destination d_apache2_wartesting_access.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-apache2_wartesting_access.log" template("$DATE $MSG\n") template_escape(no));};
destination d_apache2_wartesting_error.log { file("/opt/mydomain/remotelogs/$HOST/$YEAR/$MONTH/$DAY/$YEAR$MONTH$DAY-apache2_wartesting_error.log" template("$DATE $MSG\n") template_escape(no));};

# L O G S ##### L O G S ##### L O G S ##### L O G S #####
# 1. messages, auth, syslog, daemon.log, error
log { source(s_std_messages); filter(f_messages); destination(d_std_messages); };
log { source(s_std_auth); filter(f_auth); destination(d_std_auth); };
log { source(s_std_syslog); filter(f_syslog3); destination(d_std_syslog); };
log { source(s_std_error); filter(f_error); destination(d_std_error); };
log { source(s_std_daemon); filter(f_daemon); destination(d_std_daemon); };

# 2. nginx
log { source(s_nginx_access.log); destination(d_nginx_access.log); };
log { source(s_nginx_error.log); destination(d_nginx_error.log); };
log { source(s_nginx_pay_mydomain_com_http_access.log); destination(d_nginx_pay_mydomain_com_http_access.log); };
log { source(s_nginx_pay_mydomain_com_https_access.log); destination(d_nginx_pay_mydomain_com_https_access.log); };
log { source(s_nginx_stage_pay_mydomain_com_http_access.log); destination(d_nginx_stage_pay_mydomain_com_http_access.log); };
log { source(s_nginx_stage_pay_mydomain_com_https_access.log); destination(d_nginx_stage_pay_mydomain_com_https_access.log); };

# 3. Apache2
log { source(s_apache2_access.log); destination(d_apache2_access.log); };
log { source(s_apache2_error.log); destination(d_apache2_error.log); };

# 4. Tomcat
log { source(s_tomcat_catalina.out); destination(d_tomcat_catalina.out); };
log { source(s_tomcat_fact.log); destination(d_tomcat_fact.log); };
log { source(s_tomcat_cms.log); destination(d_tomcat_cms.log); };
log { source(s_tomcat_registry.log); destination(d_tomcat_registry.log); };
log { source(s_tomcat_erp.log); destination(d_tomcat_erp.log); };
log { source(s_tomcat_import.log); destination(d_tomcat_import.log); };

# 5. Asterisk
log { source(s_asterisk_debug); destination(d_asterisk_debug); };
log { source(s_asterisk_messages); destination(d_asterisk_messages); };
log { source(s_asterisk_dtmf); destination(d_asterisk_dtmf); };

# 6. Apache2 wartesting
log { source(s_apache2_wartesting_access.log); destination(d_apache2_wartesting_access.log); };
log { source(s_apache2_wartesting_error.log); destination(d_apache2_wartesting_error.log); };

# ==============================================================================================================
